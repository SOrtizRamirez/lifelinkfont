(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function o(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(r){if(r.ep)return;r.ep=!0;const i=o(r);fetch(r.href,i)}})();const m="https://lifelinkback.onrender.com";async function E(n){const e=await fetch(`${m}/patients/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!e.ok){const o=await e.text();throw new Error(`Error createPatient: ${e.status} ${o}`)}return e.json()}async function _(n,e){const o=await fetch(`${m}/patients/${n}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok){const t=await o.text();throw new Error(`Error updatePatient: ${o.status} ${t}`)}return o.json()}async function $(n){const e=await fetch(`${m}/patients/${n}`,{method:"DELETE"});if(!e.ok)throw new Error(`Error deletePatient: ${e.status}`);return e.json()}const d="https://lifelinkback.onrender.com",k=(location.pathname.split("/").pop()||"index.html").toLowerCase(),l=localStorage.getItem("token"),I=["form.html","info.html"];I.includes(k)&&!l&&(location.href="./index.html");const p=document.getElementById("loginForm");p&&p.addEventListener("submit",async n=>{n.preventDefault();const e=document.getElementById("doc").value.trim(),o=document.getElementById("pass").value;try{const t=await fetch(`${d}/auth/patient/login`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({identity_document:e,password:o})}),r=await t.text();console.log("LOGIN raw response:",r);let i={};try{i=r?JSON.parse(r):{}}catch{}if(!t.ok)throw new Error(i?.message||`Login falló (${t.status})`);let a=i.token||i.accessToken||i.data?.token||i.data?.accessToken;if(!a){const c=t.headers.get("authorization")||t.headers.get("Authorization"),u=t.headers.get("x-auth-token")||t.headers.get("X-Auth-Token");c?.toLowerCase().startsWith("bearer ")?a=c.slice(7):u&&(a=u)}const b=!a&&(t.headers.get("set-cookie")||i?.status==="success");if(!a&&!b)throw new Error("El backend respondió éxito pero no incluyó token (ni cookie). Revisa la forma del payload.");a&&localStorage.setItem("token",a),location.href="./info.html"}catch(t){console.error(t),alert(t.message||"Error de login")}});const f=document.getElementById("signupForm");f&&f.addEventListener("submit",v);const s=n=>(document.getElementById(n)?.value??"").trim();async function v(n){n.preventDefault();const e={identity_document:s("doc"),password:s("pass"),name:s("name"),last_name:s("last_name"),blood_type:s("blood_type"),allergies:s("allergies"),medical_conditions:s("medical_conditions"),current_medications:s("current_medications")},o=Object.entries({identity_document:e.identity_document,password:e.password,name:e.name,last_name:e.last_name,blood_type:e.blood_type}).filter(([,t])=>!t).map(([t])=>t);if(o.length){alert("Faltan: "+o.join(", "));return}try{const{data:t}=await E(e);alert(`Cuenta creada. Tu QR es: ${t.qr_identifier}`);const r=`${location.origin}/qr.html?id=${encodeURIComponent(t.qr_identifier)}`,i=document.getElementById("qr-result");i&&window.QRCode&&(i.innerHTML=`<p>Tu QR único:</p><div id="qr"></div><p>${r}</p>`,new QRCode(document.getElementById("qr"),r))}catch(t){alert(t.message),console.error(t)}}const g=document.getElementById("me"),h=document.getElementById("generate-qr");g&&((async()=>{try{const n=await fetch(`${d}/patients/me`,{headers:{Authorization:`Bearer ${l}`}});if(n.status===401)return localStorage.removeItem("token"),location.href="./index.html";const e=await n.json();if(!n.ok)throw new Error(e.message||"Error obteniendo perfil");const o=e.data,t=`${location.origin}/qr.html?id=${encodeURIComponent(o.qr_identifier||"")}`;g.innerHTML=`
        <p><b>Nombre:</b> ${o.name||""} ${o.last_name||""}</p>
        <p><b>Cédula:</b> ${o.identity_document}</p>
        <p><b>Sangre:</b> ${o.blood_type||"-"}</p>
        <p><b>Alergias:</b> ${o.allergies||"-"}</p>
        <p><b>Condiciones:</b> ${o.medical_conditions||"-"}</p>
        <p><b>Medicamentos:</b> ${o.current_medications||"-"}</p>
        <p><b>Tu QR:</b> ${o.qr_identifier?t:"Aún no generado"}</p>
        <div id="qrBox"></div>
      `,o.qr_identifier&&window.QRCode&&new QRCode(document.getElementById("qrBox"),t)}catch(n){alert(n.message)}})(),h&&h.addEventListener("click",async()=>{try{const n=await fetch(`${d}/patients/me/qr`,{method:"POST",headers:{Authorization:`Bearer ${l}`}});if(n.status===401)return localStorage.removeItem("token"),location.href="./index.html";const e=await n.json();if(!n.ok)throw new Error(e.message||"No se pudo generar/rotar QR");alert(`Nuevo QR: ${e.data.qr_identifier}`),location.reload()}catch(n){alert(n.message)}}));async function B(n){confirm("¿Eliminar este paciente?")&&(await $(n),alert("Paciente eliminado"))}async function S(n){const e={phone_number:document.getElementById("edit_phone").value.trim(),email:document.getElementById("edit_email").value.trim()};await _(n,e),alert("Paciente actualizado")}typeof window<"u"&&(window.onDelete=B,window.onSubmitEdit=S);const y=document.getElementById("close-session");y&&y.addEventListener("click",()=>{localStorage.removeItem("token"),location.href="./index.html"});const w=document.getElementById("go-signup");w&&w.addEventListener("click",()=>location.href="signup.html");
